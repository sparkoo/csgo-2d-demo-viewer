server {
    listen 8080;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript application/wasm;

    # Cache static assets, including WASM
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|wasm)$ {
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # Handle SPA routing - serve index.html for all routes
    location / {
        try_files $uri $uri/ /index.html;
    }

    location /download {
        # 1. Capture the 'url' query parameter
        # This uses a map block (defined outside the server block, usually in nginx.conf)
        # to decode the URL. For simplicity here, we assume the URL is clean.
        # NGINX's $arg_url variable gets the value of the 'url' query parameter.
        set $remote_url $arg_url;

        # 2. Key for efficiency: Disable local buffering to ensure true streaming.
        # NGINX will read chunks from the remote server and write them immediately to the client.
        proxy_buffering off;
        proxy_request_buffering off;

        # 3. Pass the request to the remote URL.
        # This is the magic directive. NGINX fetches the content from $remote_url
        # and streams it back to the client.
        proxy_pass $remote_url;

        # 4. Optional: Rewrite headers for better compatibility
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_hide_header Content-Disposition; # Prevents double disposition headers
    }
}