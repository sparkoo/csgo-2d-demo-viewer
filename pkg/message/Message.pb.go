// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: Message.proto

package message

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessagePb_MessageType int32

const (
	MessagePb_Zero             MessagePb_MessageType = 0
	MessagePb_TickStateUpdate  MessagePb_MessageType = 1
	MessagePb_AddPlayerType    MessagePb_MessageType = 2
	MessagePb_InitType         MessagePb_MessageType = 4
	MessagePb_DemoEndType      MessagePb_MessageType = 5
	MessagePb_RoundType        MessagePb_MessageType = 6
	MessagePb_ProgressType     MessagePb_MessageType = 7
	MessagePb_TimeUpdateType   MessagePb_MessageType = 8
	MessagePb_ShotType         MessagePb_MessageType = 9
	MessagePb_EmptyType        MessagePb_MessageType = 10
	MessagePb_KillType         MessagePb_MessageType = 11
	MessagePb_PlayRequestType  MessagePb_MessageType = 12
	MessagePb_ErrorType        MessagePb_MessageType = 13
	MessagePb_GrenadeEventType MessagePb_MessageType = 14
)

// Enum value maps for MessagePb_MessageType.
var (
	MessagePb_MessageType_name = map[int32]string{
		0:  "Zero",
		1:  "TickStateUpdate",
		2:  "AddPlayerType",
		4:  "InitType",
		5:  "DemoEndType",
		6:  "RoundType",
		7:  "ProgressType",
		8:  "TimeUpdateType",
		9:  "ShotType",
		10: "EmptyType",
		11: "KillType",
		12: "PlayRequestType",
		13: "ErrorType",
		14: "GrenadeEventType",
	}
	MessagePb_MessageType_value = map[string]int32{
		"Zero":             0,
		"TickStateUpdate":  1,
		"AddPlayerType":    2,
		"InitType":         4,
		"DemoEndType":      5,
		"RoundType":        6,
		"ProgressType":     7,
		"TimeUpdateType":   8,
		"ShotType":         9,
		"EmptyType":        10,
		"KillType":         11,
		"PlayRequestType":  12,
		"ErrorType":        13,
		"GrenadeEventType": 14,
	}
)

func (x MessagePb_MessageType) Enum() *MessagePb_MessageType {
	p := new(MessagePb_MessageType)
	*p = x
	return p
}

func (x MessagePb_MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessagePb_MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_Message_proto_enumTypes[0].Descriptor()
}

func (MessagePb_MessageType) Type() protoreflect.EnumType {
	return &file_Message_proto_enumTypes[0]
}

func (x MessagePb_MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessagePb_MessageType.Descriptor instead.
func (MessagePb_MessageType) EnumDescriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{0, 0}
}

type MessagePb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgType      MessagePb_MessageType `protobuf:"varint,1,opt,name=msgType,proto3,enum=csgo.MessagePb_MessageType" json:"msgType,omitempty"`
	Tick         int32                 `protobuf:"varint,2,opt,name=tick,proto3" json:"tick,omitempty"`
	TeamUpdate   *TeamUpdatePb         `protobuf:"bytes,3,opt,name=teamUpdate,proto3,oneof" json:"teamUpdate,omitempty"`
	TickState    *TickStatePb          `protobuf:"bytes,4,opt,name=tickState,proto3,oneof" json:"tickState,omitempty"`
	Init         *InitPb               `protobuf:"bytes,5,opt,name=init,proto3,oneof" json:"init,omitempty"`
	Round        *RoundPb              `protobuf:"bytes,6,opt,name=round,proto3,oneof" json:"round,omitempty"`
	Progress     *ProgressPb           `protobuf:"bytes,7,opt,name=progress,proto3,oneof" json:"progress,omitempty"`
	RoundTime    *RoundTimePb          `protobuf:"bytes,8,opt,name=roundTime,proto3,oneof" json:"roundTime,omitempty"`
	Shot         *ShotPb               `protobuf:"bytes,9,opt,name=shot,proto3,oneof" json:"shot,omitempty"`
	Kill         *KillPb               `protobuf:"bytes,10,opt,name=kill,proto3,oneof" json:"kill,omitempty"`
	Demo         *DemoPb               `protobuf:"bytes,11,opt,name=demo,proto3,oneof" json:"demo,omitempty"`
	GrenadeEvent *GrenadePb            `protobuf:"bytes,12,opt,name=grenadeEvent,proto3,oneof" json:"grenadeEvent,omitempty"`
}

func (x *MessagePb) Reset() {
	*x = MessagePb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagePb) ProtoMessage() {}

func (x *MessagePb) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagePb.ProtoReflect.Descriptor instead.
func (*MessagePb) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{0}
}

func (x *MessagePb) GetMsgType() MessagePb_MessageType {
	if x != nil {
		return x.MsgType
	}
	return MessagePb_Zero
}

func (x *MessagePb) GetTick() int32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

func (x *MessagePb) GetTeamUpdate() *TeamUpdatePb {
	if x != nil {
		return x.TeamUpdate
	}
	return nil
}

func (x *MessagePb) GetTickState() *TickStatePb {
	if x != nil {
		return x.TickState
	}
	return nil
}

func (x *MessagePb) GetInit() *InitPb {
	if x != nil {
		return x.Init
	}
	return nil
}

func (x *MessagePb) GetRound() *RoundPb {
	if x != nil {
		return x.Round
	}
	return nil
}

func (x *MessagePb) GetProgress() *ProgressPb {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *MessagePb) GetRoundTime() *RoundTimePb {
	if x != nil {
		return x.RoundTime
	}
	return nil
}

func (x *MessagePb) GetShot() *ShotPb {
	if x != nil {
		return x.Shot
	}
	return nil
}

func (x *MessagePb) GetKill() *KillPb {
	if x != nil {
		return x.Kill
	}
	return nil
}

func (x *MessagePb) GetDemo() *DemoPb {
	if x != nil {
		return x.Demo
	}
	return nil
}

func (x *MessagePb) GetGrenadeEvent() *GrenadePb {
	if x != nil {
		return x.GrenadeEvent
	}
	return nil
}

type PlayerPb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId              int32    `protobuf:"varint,1,opt,name=PlayerId,proto3" json:"PlayerId,omitempty"`
	Name                  string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Team                  string   `protobuf:"bytes,3,opt,name=Team,proto3" json:"Team,omitempty"`
	X                     float64  `protobuf:"fixed64,4,opt,name=X,proto3" json:"X,omitempty"`
	Y                     float64  `protobuf:"fixed64,5,opt,name=Y,proto3" json:"Y,omitempty"`
	Z                     float64  `protobuf:"fixed64,6,opt,name=Z,proto3" json:"Z,omitempty"`
	Rotation              float32  `protobuf:"fixed32,7,opt,name=Rotation,proto3" json:"Rotation,omitempty"`
	Alive                 bool     `protobuf:"varint,8,opt,name=Alive,proto3" json:"Alive,omitempty"`
	Weapon                string   `protobuf:"bytes,9,opt,name=Weapon,proto3" json:"Weapon,omitempty"`
	Flashed               bool     `protobuf:"varint,10,opt,name=Flashed,proto3" json:"Flashed,omitempty"`
	Hp                    int32    `protobuf:"varint,11,opt,name=Hp,proto3" json:"Hp,omitempty"`
	Armor                 int32    `protobuf:"varint,12,opt,name=Armor,proto3" json:"Armor,omitempty"`
	Helmet                bool     `protobuf:"varint,13,opt,name=Helmet,proto3" json:"Helmet,omitempty"`
	Defuse                bool     `protobuf:"varint,14,opt,name=Defuse,proto3" json:"Defuse,omitempty"`
	Bomb                  bool     `protobuf:"varint,15,opt,name=Bomb,proto3" json:"Bomb,omitempty"`
	Money                 int32    `protobuf:"varint,16,opt,name=Money,proto3" json:"Money,omitempty"`
	Primary               string   `protobuf:"bytes,17,opt,name=Primary,proto3" json:"Primary,omitempty"`
	PrimaryAmmoMagazine   int32    `protobuf:"varint,18,opt,name=PrimaryAmmoMagazine,proto3" json:"PrimaryAmmoMagazine,omitempty"`
	PrimaryAmmoReserve    int32    `protobuf:"varint,19,opt,name=PrimaryAmmoReserve,proto3" json:"PrimaryAmmoReserve,omitempty"`
	Secondary             string   `protobuf:"bytes,20,opt,name=Secondary,proto3" json:"Secondary,omitempty"`
	SecondaryAmmoMagazine int32    `protobuf:"varint,21,opt,name=SecondaryAmmoMagazine,proto3" json:"SecondaryAmmoMagazine,omitempty"`
	SecondaryAmmoReserve  int32    `protobuf:"varint,22,opt,name=SecondaryAmmoReserve,proto3" json:"SecondaryAmmoReserve,omitempty"`
	Grenades              []string `protobuf:"bytes,23,rep,name=Grenades,proto3" json:"Grenades,omitempty"`
}

func (x *PlayerPb) Reset() {
	*x = PlayerPb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerPb) ProtoMessage() {}

func (x *PlayerPb) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerPb.ProtoReflect.Descriptor instead.
func (*PlayerPb) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{1}
}

func (x *PlayerPb) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerPb) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerPb) GetTeam() string {
	if x != nil {
		return x.Team
	}
	return ""
}

func (x *PlayerPb) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *PlayerPb) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *PlayerPb) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *PlayerPb) GetRotation() float32 {
	if x != nil {
		return x.Rotation
	}
	return 0
}

func (x *PlayerPb) GetAlive() bool {
	if x != nil {
		return x.Alive
	}
	return false
}

func (x *PlayerPb) GetWeapon() string {
	if x != nil {
		return x.Weapon
	}
	return ""
}

func (x *PlayerPb) GetFlashed() bool {
	if x != nil {
		return x.Flashed
	}
	return false
}

func (x *PlayerPb) GetHp() int32 {
	if x != nil {
		return x.Hp
	}
	return 0
}

func (x *PlayerPb) GetArmor() int32 {
	if x != nil {
		return x.Armor
	}
	return 0
}

func (x *PlayerPb) GetHelmet() bool {
	if x != nil {
		return x.Helmet
	}
	return false
}

func (x *PlayerPb) GetDefuse() bool {
	if x != nil {
		return x.Defuse
	}
	return false
}

func (x *PlayerPb) GetBomb() bool {
	if x != nil {
		return x.Bomb
	}
	return false
}

func (x *PlayerPb) GetMoney() int32 {
	if x != nil {
		return x.Money
	}
	return 0
}

func (x *PlayerPb) GetPrimary() string {
	if x != nil {
		return x.Primary
	}
	return ""
}

func (x *PlayerPb) GetPrimaryAmmoMagazine() int32 {
	if x != nil {
		return x.PrimaryAmmoMagazine
	}
	return 0
}

func (x *PlayerPb) GetPrimaryAmmoReserve() int32 {
	if x != nil {
		return x.PrimaryAmmoReserve
	}
	return 0
}

func (x *PlayerPb) GetSecondary() string {
	if x != nil {
		return x.Secondary
	}
	return ""
}

func (x *PlayerPb) GetSecondaryAmmoMagazine() int32 {
	if x != nil {
		return x.SecondaryAmmoMagazine
	}
	return 0
}

func (x *PlayerPb) GetSecondaryAmmoReserve() int32 {
	if x != nil {
		return x.SecondaryAmmoReserve
	}
	return 0
}

func (x *PlayerPb) GetGrenades() []string {
	if x != nil {
		return x.Grenades
	}
	return nil
}

type TeamUpdatePb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TName   string `protobuf:"bytes,1,opt,name=TName,proto3" json:"TName,omitempty"`
	TScore  int32  `protobuf:"varint,2,opt,name=TScore,proto3" json:"TScore,omitempty"`
	CTName  string `protobuf:"bytes,3,opt,name=CTName,proto3" json:"CTName,omitempty"`
	CTScore int32  `protobuf:"varint,4,opt,name=CTScore,proto3" json:"CTScore,omitempty"`
}

func (x *TeamUpdatePb) Reset() {
	*x = TeamUpdatePb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamUpdatePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamUpdatePb) ProtoMessage() {}

func (x *TeamUpdatePb) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamUpdatePb.ProtoReflect.Descriptor instead.
func (*TeamUpdatePb) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{2}
}

func (x *TeamUpdatePb) GetTName() string {
	if x != nil {
		return x.TName
	}
	return ""
}

func (x *TeamUpdatePb) GetTScore() int32 {
	if x != nil {
		return x.TScore
	}
	return 0
}

func (x *TeamUpdatePb) GetCTName() string {
	if x != nil {
		return x.CTName
	}
	return ""
}

func (x *TeamUpdatePb) GetCTScore() int32 {
	if x != nil {
		return x.CTScore
	}
	return 0
}

type TickStatePb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*PlayerPb  `protobuf:"bytes,1,rep,name=Players,proto3" json:"Players,omitempty"`
	Nades   []*GrenadePb `protobuf:"bytes,2,rep,name=Nades,proto3" json:"Nades,omitempty"`
}

func (x *TickStatePb) Reset() {
	*x = TickStatePb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickStatePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickStatePb) ProtoMessage() {}

func (x *TickStatePb) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickStatePb.ProtoReflect.Descriptor instead.
func (*TickStatePb) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{3}
}

func (x *TickStatePb) GetPlayers() []*PlayerPb {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *TickStatePb) GetNades() []*GrenadePb {
	if x != nil {
		return x.Nades
	}
	return nil
}

type InitPb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapName string `protobuf:"bytes,1,opt,name=mapName,proto3" json:"mapName,omitempty"`
	TName   string `protobuf:"bytes,2,opt,name=TName,proto3" json:"TName,omitempty"`
	CTName  string `protobuf:"bytes,3,opt,name=CTName,proto3" json:"CTName,omitempty"`
}

func (x *InitPb) Reset() {
	*x = InitPb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitPb) ProtoMessage() {}

func (x *InitPb) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitPb.ProtoReflect.Descriptor instead.
func (*InitPb) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{4}
}

func (x *InitPb) GetMapName() string {
	if x != nil {
		return x.MapName
	}
	return ""
}

func (x *InitPb) GetTName() string {
	if x != nil {
		return x.TName
	}
	return ""
}

func (x *InitPb) GetCTName() string {
	if x != nil {
		return x.CTName
	}
	return ""
}

type KillPb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VictimId int32 `protobuf:"varint,1,opt,name=VictimId,proto3" json:"VictimId,omitempty"`
}

func (x *KillPb) Reset() {
	*x = KillPb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillPb) ProtoMessage() {}

func (x *KillPb) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillPb.ProtoReflect.Descriptor instead.
func (*KillPb) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{5}
}

func (x *KillPb) GetVictimId() int32 {
	if x != nil {
		return x.VictimId
	}
	return 0
}

type ShotPb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int32   `protobuf:"varint,1,opt,name=PlayerId,proto3" json:"PlayerId,omitempty"`
	X        float64 `protobuf:"fixed64,2,opt,name=X,proto3" json:"X,omitempty"`
	Y        float64 `protobuf:"fixed64,3,opt,name=Y,proto3" json:"Y,omitempty"`
	Rotation float32 `protobuf:"fixed32,4,opt,name=Rotation,proto3" json:"Rotation,omitempty"`
}

func (x *ShotPb) Reset() {
	*x = ShotPb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShotPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShotPb) ProtoMessage() {}

func (x *ShotPb) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShotPb.ProtoReflect.Descriptor instead.
func (*ShotPb) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{6}
}

func (x *ShotPb) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *ShotPb) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ShotPb) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *ShotPb) GetRotation() float32 {
	if x != nil {
		return x.Rotation
	}
	return 0
}

type GrenadePb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Kind   string  `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	X      float64 `protobuf:"fixed64,3,opt,name=x,proto3" json:"x,omitempty"`
	Y      float64 `protobuf:"fixed64,4,opt,name=y,proto3" json:"y,omitempty"`
	Z      float64 `protobuf:"fixed64,5,opt,name=z,proto3" json:"z,omitempty"`
	Action string  `protobuf:"bytes,6,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *GrenadePb) Reset() {
	*x = GrenadePb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrenadePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrenadePb) ProtoMessage() {}

func (x *GrenadePb) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrenadePb.ProtoReflect.Descriptor instead.
func (*GrenadePb) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{7}
}

func (x *GrenadePb) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GrenadePb) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *GrenadePb) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *GrenadePb) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *GrenadePb) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *GrenadePb) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type RoundPb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundNo           int32         `protobuf:"varint,1,opt,name=RoundNo,proto3" json:"RoundNo,omitempty"`
	RoundTookSeconds  int32         `protobuf:"varint,2,opt,name=RoundTookSeconds,proto3" json:"RoundTookSeconds,omitempty"`
	StartTick         int32         `protobuf:"varint,3,opt,name=StartTick,proto3" json:"StartTick,omitempty"`
	FreezetimeEndTick int32         `protobuf:"varint,4,opt,name=FreezetimeEndTick,proto3" json:"FreezetimeEndTick,omitempty"`
	EndTick           int32         `protobuf:"varint,5,opt,name=EndTick,proto3" json:"EndTick,omitempty"`
	Ticks             []*MessagePb  `protobuf:"bytes,6,rep,name=Ticks,proto3" json:"Ticks,omitempty"`
	TeamState         *TeamUpdatePb `protobuf:"bytes,7,opt,name=TeamState,proto3" json:"TeamState,omitempty"`
	Winner            string        `protobuf:"bytes,8,opt,name=Winner,proto3" json:"Winner,omitempty"`
}

func (x *RoundPb) Reset() {
	*x = RoundPb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundPb) ProtoMessage() {}

func (x *RoundPb) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundPb.ProtoReflect.Descriptor instead.
func (*RoundPb) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{8}
}

func (x *RoundPb) GetRoundNo() int32 {
	if x != nil {
		return x.RoundNo
	}
	return 0
}

func (x *RoundPb) GetRoundTookSeconds() int32 {
	if x != nil {
		return x.RoundTookSeconds
	}
	return 0
}

func (x *RoundPb) GetStartTick() int32 {
	if x != nil {
		return x.StartTick
	}
	return 0
}

func (x *RoundPb) GetFreezetimeEndTick() int32 {
	if x != nil {
		return x.FreezetimeEndTick
	}
	return 0
}

func (x *RoundPb) GetEndTick() int32 {
	if x != nil {
		return x.EndTick
	}
	return 0
}

func (x *RoundPb) GetTicks() []*MessagePb {
	if x != nil {
		return x.Ticks
	}
	return nil
}

func (x *RoundPb) GetTeamState() *TeamUpdatePb {
	if x != nil {
		return x.TeamState
	}
	return nil
}

func (x *RoundPb) GetWinner() string {
	if x != nil {
		return x.Winner
	}
	return ""
}

type ProgressPb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress int32  `protobuf:"varint,1,opt,name=Progress,proto3" json:"Progress,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ProgressPb) Reset() {
	*x = ProgressPb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgressPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressPb) ProtoMessage() {}

func (x *ProgressPb) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressPb.ProtoReflect.Descriptor instead.
func (*ProgressPb) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{9}
}

func (x *ProgressPb) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *ProgressPb) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RoundTimePb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundTime  string `protobuf:"bytes,1,opt,name=RoundTime,proto3" json:"RoundTime,omitempty"`
	FreezeTime int32  `protobuf:"varint,2,opt,name=FreezeTime,proto3" json:"FreezeTime,omitempty"`
}

func (x *RoundTimePb) Reset() {
	*x = RoundTimePb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundTimePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundTimePb) ProtoMessage() {}

func (x *RoundTimePb) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundTimePb.ProtoReflect.Descriptor instead.
func (*RoundTimePb) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{10}
}

func (x *RoundTimePb) GetRoundTime() string {
	if x != nil {
		return x.RoundTime
	}
	return ""
}

func (x *RoundTimePb) GetFreezeTime() int32 {
	if x != nil {
		return x.FreezeTime
	}
	return 0
}

type DemoPb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId string `protobuf:"bytes,1,opt,name=MatchId,proto3" json:"MatchId,omitempty"`
}

func (x *DemoPb) Reset() {
	*x = DemoPb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DemoPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DemoPb) ProtoMessage() {}

func (x *DemoPb) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DemoPb.ProtoReflect.Descriptor instead.
func (*DemoPb) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{11}
}

func (x *DemoPb) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

var File_Message_proto protoreflect.FileDescriptor

var file_Message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x04, 0x63, 0x73, 0x67, 0x6f, 0x22, 0xa0, 0x07, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x50, 0x62, 0x12, 0x35, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x50, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x12, 0x37,
	0x0a, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x62, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x73, 0x67,
	0x6f, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x62, 0x48, 0x01, 0x52,
	0x09, 0x74, 0x69, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a,
	0x04, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x73,
	0x67, 0x6f, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x62, 0x48, 0x02, 0x52, 0x04, 0x69, 0x6e, 0x69,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x50, 0x62, 0x48, 0x03, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x31,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x50, 0x62, 0x48, 0x04, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x34, 0x0a, 0x09, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x62, 0x48, 0x05, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x53, 0x68, 0x6f,
	0x74, 0x50, 0x62, 0x48, 0x06, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x74, 0x88, 0x01, 0x01, 0x12, 0x25,
	0x0a, 0x04, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63,
	0x73, 0x67, 0x6f, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x50, 0x62, 0x48, 0x07, 0x52, 0x04, 0x6b, 0x69,
	0x6c, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x65, 0x6d, 0x6f, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x44, 0x65, 0x6d, 0x6f, 0x50,
	0x62, 0x48, 0x08, 0x52, 0x04, 0x64, 0x65, 0x6d, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x0c,
	0x67, 0x72, 0x65, 0x6e, 0x61, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x47, 0x72, 0x65, 0x6e, 0x61, 0x64,
	0x65, 0x50, 0x62, 0x48, 0x09, 0x52, 0x0c, 0x67, 0x72, 0x65, 0x6e, 0x61, 0x64, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x22, 0xf8, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x5a, 0x65, 0x72, 0x6f, 0x10, 0x00,
	0x12, 0x13, 0x0a, 0x0f, 0x54, 0x69, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x6e, 0x69, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x65, 0x6d, 0x6f, 0x45, 0x6e,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x69, 0x6d, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08,
	0x53, 0x68, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x4b, 0x69, 0x6c,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x10, 0x0b, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x10, 0x0c, 0x12, 0x0d, 0x0a, 0x09,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x10, 0x0d, 0x12, 0x14, 0x0a, 0x10, 0x47,
	0x72, 0x65, 0x6e, 0x61, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x10,
	0x0e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6b, 0x69, 0x6c, 0x6c, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x67, 0x72, 0x65, 0x6e,
	0x61, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xfc, 0x04, 0x0a, 0x08, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x50, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0c, 0x0a, 0x01, 0x58, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x58, 0x12, 0x0c, 0x0a, 0x01, 0x59, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x01, 0x59, 0x12, 0x0c, 0x0a, 0x01, 0x5a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x01, 0x5a, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x48, 0x70, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x48, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x72, 0x6d, 0x6f, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x48, 0x65, 0x6c, 0x6d, 0x65, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x48,
	0x65, 0x6c, 0x6d, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x65, 0x66, 0x75, 0x73, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x44, 0x65, 0x66, 0x75, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x42, 0x6f, 0x6d, 0x62, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x42, 0x6f, 0x6d,
	0x62, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x30, 0x0a, 0x13, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x6d, 0x6d, 0x6f,
	0x4d, 0x61, 0x67, 0x61, 0x7a, 0x69, 0x6e, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x6d, 0x6d, 0x6f, 0x4d, 0x61, 0x67, 0x61, 0x7a,
	0x69, 0x6e, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x6d,
	0x6d, 0x6f, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x6d, 0x6d, 0x6f, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72,
	0x79, 0x12, 0x34, 0x0a, 0x15, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x41, 0x6d,
	0x6d, 0x6f, 0x4d, 0x61, 0x67, 0x61, 0x7a, 0x69, 0x6e, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x15, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x41, 0x6d, 0x6d, 0x6f, 0x4d,
	0x61, 0x67, 0x61, 0x7a, 0x69, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x61, 0x72, 0x79, 0x41, 0x6d, 0x6d, 0x6f, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x41, 0x6d, 0x6d, 0x6f, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x47,
	0x72, 0x65, 0x6e, 0x61, 0x64, 0x65, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x47,
	0x72, 0x65, 0x6e, 0x61, 0x64, 0x65, 0x73, 0x22, 0x6e, 0x0a, 0x0c, 0x54, 0x65, 0x61, 0x6d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x54, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x54,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x54, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x54, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x54, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x43, 0x54, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x5e, 0x0a, 0x0b, 0x54, 0x69, 0x63, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x50, 0x62, 0x12, 0x28, 0x0a, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x62, 0x52, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x12, 0x25, 0x0a, 0x05, 0x4e, 0x61, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x47, 0x72, 0x65, 0x6e, 0x61, 0x64, 0x65, 0x50, 0x62,
	0x52, 0x05, 0x4e, 0x61, 0x64, 0x65, 0x73, 0x22, 0x50, 0x0a, 0x06, 0x49, 0x6e, 0x69, 0x74, 0x50,
	0x62, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x54, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x43, 0x54, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x06, 0x4b, 0x69, 0x6c,
	0x6c, 0x50, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x56, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x56, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x49, 0x64, 0x22,
	0x5c, 0x0a, 0x06, 0x53, 0x68, 0x6f, 0x74, 0x50, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x58, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x01, 0x58, 0x12, 0x0c, 0x0a, 0x01, 0x59, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01,
	0x59, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x71, 0x0a,
	0x09, 0x47, 0x72, 0x65, 0x6e, 0x61, 0x64, 0x65, 0x50, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x0c,
	0x0a, 0x01, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x7a, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xa6, 0x02, 0x0a, 0x07, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x62, 0x12, 0x18, 0x0a, 0x07,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54,
	0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x63, 0x6b,
	0x12, 0x2c, 0x0a, 0x11, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x46, 0x72, 0x65,
	0x65, 0x7a, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x25, 0x0a, 0x05, 0x54, 0x69, 0x63, 0x6b,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x62, 0x52, 0x05, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x12,
	0x30, 0x0a, 0x09, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x62, 0x52, 0x09, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x42, 0x0a, 0x0a, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x50, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a,
	0x0b, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x62, 0x12, 0x1c, 0x0a, 0x09,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x72,
	0x65, 0x65, 0x7a, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x22, 0x0a, 0x06, 0x44, 0x65,
	0x6d, 0x6f, 0x50, 0x62, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x42, 0x0a,
	0x5a, 0x08, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_Message_proto_rawDescOnce sync.Once
	file_Message_proto_rawDescData = file_Message_proto_rawDesc
)

func file_Message_proto_rawDescGZIP() []byte {
	file_Message_proto_rawDescOnce.Do(func() {
		file_Message_proto_rawDescData = protoimpl.X.CompressGZIP(file_Message_proto_rawDescData)
	})
	return file_Message_proto_rawDescData
}

var file_Message_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Message_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_Message_proto_goTypes = []interface{}{
	(MessagePb_MessageType)(0), // 0: csgo.MessagePb.MessageType
	(*MessagePb)(nil),          // 1: csgo.MessagePb
	(*PlayerPb)(nil),           // 2: csgo.PlayerPb
	(*TeamUpdatePb)(nil),       // 3: csgo.TeamUpdatePb
	(*TickStatePb)(nil),        // 4: csgo.TickStatePb
	(*InitPb)(nil),             // 5: csgo.InitPb
	(*KillPb)(nil),             // 6: csgo.KillPb
	(*ShotPb)(nil),             // 7: csgo.ShotPb
	(*GrenadePb)(nil),          // 8: csgo.GrenadePb
	(*RoundPb)(nil),            // 9: csgo.RoundPb
	(*ProgressPb)(nil),         // 10: csgo.ProgressPb
	(*RoundTimePb)(nil),        // 11: csgo.RoundTimePb
	(*DemoPb)(nil),             // 12: csgo.DemoPb
}
var file_Message_proto_depIdxs = []int32{
	0,  // 0: csgo.MessagePb.msgType:type_name -> csgo.MessagePb.MessageType
	3,  // 1: csgo.MessagePb.teamUpdate:type_name -> csgo.TeamUpdatePb
	4,  // 2: csgo.MessagePb.tickState:type_name -> csgo.TickStatePb
	5,  // 3: csgo.MessagePb.init:type_name -> csgo.InitPb
	9,  // 4: csgo.MessagePb.round:type_name -> csgo.RoundPb
	10, // 5: csgo.MessagePb.progress:type_name -> csgo.ProgressPb
	11, // 6: csgo.MessagePb.roundTime:type_name -> csgo.RoundTimePb
	7,  // 7: csgo.MessagePb.shot:type_name -> csgo.ShotPb
	6,  // 8: csgo.MessagePb.kill:type_name -> csgo.KillPb
	12, // 9: csgo.MessagePb.demo:type_name -> csgo.DemoPb
	8,  // 10: csgo.MessagePb.grenadeEvent:type_name -> csgo.GrenadePb
	2,  // 11: csgo.TickStatePb.Players:type_name -> csgo.PlayerPb
	8,  // 12: csgo.TickStatePb.Nades:type_name -> csgo.GrenadePb
	1,  // 13: csgo.RoundPb.Ticks:type_name -> csgo.MessagePb
	3,  // 14: csgo.RoundPb.TeamState:type_name -> csgo.TeamUpdatePb
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_Message_proto_init() }
func file_Message_proto_init() {
	if File_Message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagePb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerPb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamUpdatePb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickStatePb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitPb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillPb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShotPb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrenadePb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundPb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgressPb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundTimePb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DemoPb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_Message_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Message_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Message_proto_goTypes,
		DependencyIndexes: file_Message_proto_depIdxs,
		EnumInfos:         file_Message_proto_enumTypes,
		MessageInfos:      file_Message_proto_msgTypes,
	}.Build()
	File_Message_proto = out.File
	file_Message_proto_rawDesc = nil
	file_Message_proto_goTypes = nil
	file_Message_proto_depIdxs = nil
}
