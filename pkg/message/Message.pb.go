// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: Message.proto

package message

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message_MessageType int32

const (
	Message_Zero             Message_MessageType = 0
	Message_TickStateUpdate  Message_MessageType = 1
	Message_AddPlayerType    Message_MessageType = 2
	Message_InitType         Message_MessageType = 4
	Message_DemoEndType      Message_MessageType = 5
	Message_RoundType        Message_MessageType = 6
	Message_ProgressType     Message_MessageType = 7
	Message_TimeUpdateType   Message_MessageType = 8
	Message_ShotType         Message_MessageType = 9
	Message_EmptyType        Message_MessageType = 10
	Message_FragType         Message_MessageType = 11
	Message_PlayRequestType  Message_MessageType = 12
	Message_ErrorType        Message_MessageType = 13
	Message_GrenadeEventType Message_MessageType = 14
)

// Enum value maps for Message_MessageType.
var (
	Message_MessageType_name = map[int32]string{
		0:  "Zero",
		1:  "TickStateUpdate",
		2:  "AddPlayerType",
		4:  "InitType",
		5:  "DemoEndType",
		6:  "RoundType",
		7:  "ProgressType",
		8:  "TimeUpdateType",
		9:  "ShotType",
		10: "EmptyType",
		11: "FragType",
		12: "PlayRequestType",
		13: "ErrorType",
		14: "GrenadeEventType",
	}
	Message_MessageType_value = map[string]int32{
		"Zero":             0,
		"TickStateUpdate":  1,
		"AddPlayerType":    2,
		"InitType":         4,
		"DemoEndType":      5,
		"RoundType":        6,
		"ProgressType":     7,
		"TimeUpdateType":   8,
		"ShotType":         9,
		"EmptyType":        10,
		"FragType":         11,
		"PlayRequestType":  12,
		"ErrorType":        13,
		"GrenadeEventType": 14,
	}
)

func (x Message_MessageType) Enum() *Message_MessageType {
	p := new(Message_MessageType)
	*p = x
	return p
}

func (x Message_MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_Message_proto_enumTypes[0].Descriptor()
}

func (Message_MessageType) Type() protoreflect.EnumType {
	return &file_Message_proto_enumTypes[0]
}

func (x Message_MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Message_MessageType.Descriptor instead.
func (Message_MessageType) EnumDescriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{0, 0}
}

type Bomb_BombState int32

const (
	Bomb_Zero     Bomb_BombState = 0
	Bomb_Defusing Bomb_BombState = 1
	Bomb_Defused  Bomb_BombState = 2
	Bomb_Explode  Bomb_BombState = 3
	Bomb_Planting Bomb_BombState = 4
	Bomb_Planted  Bomb_BombState = 5
)

// Enum value maps for Bomb_BombState.
var (
	Bomb_BombState_name = map[int32]string{
		0: "Zero",
		1: "Defusing",
		2: "Defused",
		3: "Explode",
		4: "Planting",
		5: "Planted",
	}
	Bomb_BombState_value = map[string]int32{
		"Zero":     0,
		"Defusing": 1,
		"Defused":  2,
		"Explode":  3,
		"Planting": 4,
		"Planted":  5,
	}
)

func (x Bomb_BombState) Enum() *Bomb_BombState {
	p := new(Bomb_BombState)
	*p = x
	return p
}

func (x Bomb_BombState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Bomb_BombState) Descriptor() protoreflect.EnumDescriptor {
	return file_Message_proto_enumTypes[1].Descriptor()
}

func (Bomb_BombState) Type() protoreflect.EnumType {
	return &file_Message_proto_enumTypes[1]
}

func (x Bomb_BombState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Bomb_BombState.Descriptor instead.
func (Bomb_BombState) EnumDescriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{8, 0}
}

type Demo_DemoPlatformType int32

const (
	Demo_Upload Demo_DemoPlatformType = 0
	Demo_Faceit Demo_DemoPlatformType = 1
	Demo_Steam  Demo_DemoPlatformType = 2
)

// Enum value maps for Demo_DemoPlatformType.
var (
	Demo_DemoPlatformType_name = map[int32]string{
		0: "Upload",
		1: "Faceit",
		2: "Steam",
	}
	Demo_DemoPlatformType_value = map[string]int32{
		"Upload": 0,
		"Faceit": 1,
		"Steam":  2,
	}
)

func (x Demo_DemoPlatformType) Enum() *Demo_DemoPlatformType {
	p := new(Demo_DemoPlatformType)
	*p = x
	return p
}

func (x Demo_DemoPlatformType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Demo_DemoPlatformType) Descriptor() protoreflect.EnumDescriptor {
	return file_Message_proto_enumTypes[2].Descriptor()
}

func (Demo_DemoPlatformType) Type() protoreflect.EnumType {
	return &file_Message_proto_enumTypes[2]
}

func (x Demo_DemoPlatformType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Demo_DemoPlatformType.Descriptor instead.
func (Demo_DemoPlatformType) EnumDescriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{12, 0}
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgType      Message_MessageType `protobuf:"varint,1,opt,name=msgType,proto3,enum=csgo.Message_MessageType" json:"msgType,omitempty"`
	Tick         int32               `protobuf:"varint,2,opt,name=tick,proto3" json:"tick,omitempty"`
	TeamUpdate   *TeamUpdate         `protobuf:"bytes,3,opt,name=teamUpdate,proto3,oneof" json:"teamUpdate,omitempty"`
	TickState    *TickState          `protobuf:"bytes,4,opt,name=tickState,proto3,oneof" json:"tickState,omitempty"`
	Init         *Init               `protobuf:"bytes,5,opt,name=init,proto3,oneof" json:"init,omitempty"`
	Round        *Round              `protobuf:"bytes,6,opt,name=round,proto3,oneof" json:"round,omitempty"`
	Progress     *Progress           `protobuf:"bytes,7,opt,name=progress,proto3,oneof" json:"progress,omitempty"`
	RoundTime    *RoundTime          `protobuf:"bytes,8,opt,name=roundTime,proto3,oneof" json:"roundTime,omitempty"`
	Shot         *Shot               `protobuf:"bytes,9,opt,name=shot,proto3,oneof" json:"shot,omitempty"`
	Frag         *Frag               `protobuf:"bytes,10,opt,name=frag,proto3,oneof" json:"frag,omitempty"`
	Demo         *Demo               `protobuf:"bytes,11,opt,name=demo,proto3,oneof" json:"demo,omitempty"`
	GrenadeEvent *Grenade            `protobuf:"bytes,12,opt,name=grenadeEvent,proto3,oneof" json:"grenadeEvent,omitempty"`
	Message      *string             `protobuf:"bytes,13,opt,name=message,proto3,oneof" json:"message,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetMsgType() Message_MessageType {
	if x != nil {
		return x.MsgType
	}
	return Message_Zero
}

func (x *Message) GetTick() int32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

func (x *Message) GetTeamUpdate() *TeamUpdate {
	if x != nil {
		return x.TeamUpdate
	}
	return nil
}

func (x *Message) GetTickState() *TickState {
	if x != nil {
		return x.TickState
	}
	return nil
}

func (x *Message) GetInit() *Init {
	if x != nil {
		return x.Init
	}
	return nil
}

func (x *Message) GetRound() *Round {
	if x != nil {
		return x.Round
	}
	return nil
}

func (x *Message) GetProgress() *Progress {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *Message) GetRoundTime() *RoundTime {
	if x != nil {
		return x.RoundTime
	}
	return nil
}

func (x *Message) GetShot() *Shot {
	if x != nil {
		return x.Shot
	}
	return nil
}

func (x *Message) GetFrag() *Frag {
	if x != nil {
		return x.Frag
	}
	return nil
}

func (x *Message) GetDemo() *Demo {
	if x != nil {
		return x.Demo
	}
	return nil
}

func (x *Message) GetGrenadeEvent() *Grenade {
	if x != nil {
		return x.GrenadeEvent
	}
	return nil
}

func (x *Message) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId              int32    `protobuf:"varint,1,opt,name=PlayerId,proto3" json:"PlayerId,omitempty"`
	Name                  string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Team                  string   `protobuf:"bytes,3,opt,name=Team,proto3" json:"Team,omitempty"`
	X                     float64  `protobuf:"fixed64,4,opt,name=X,proto3" json:"X,omitempty"`
	Y                     float64  `protobuf:"fixed64,5,opt,name=Y,proto3" json:"Y,omitempty"`
	Z                     float64  `protobuf:"fixed64,6,opt,name=Z,proto3" json:"Z,omitempty"`
	Rotation              float32  `protobuf:"fixed32,7,opt,name=Rotation,proto3" json:"Rotation,omitempty"`
	Alive                 bool     `protobuf:"varint,8,opt,name=Alive,proto3" json:"Alive,omitempty"`
	Weapon                string   `protobuf:"bytes,9,opt,name=Weapon,proto3" json:"Weapon,omitempty"`
	Flashed               bool     `protobuf:"varint,10,opt,name=Flashed,proto3" json:"Flashed,omitempty"`
	Hp                    int32    `protobuf:"varint,11,opt,name=Hp,proto3" json:"Hp,omitempty"`
	Armor                 int32    `protobuf:"varint,12,opt,name=Armor,proto3" json:"Armor,omitempty"`
	Helmet                bool     `protobuf:"varint,13,opt,name=Helmet,proto3" json:"Helmet,omitempty"`
	Defuse                bool     `protobuf:"varint,14,opt,name=Defuse,proto3" json:"Defuse,omitempty"`
	Bomb                  bool     `protobuf:"varint,15,opt,name=Bomb,proto3" json:"Bomb,omitempty"`
	Money                 int32    `protobuf:"varint,16,opt,name=Money,proto3" json:"Money,omitempty"`
	Primary               string   `protobuf:"bytes,17,opt,name=Primary,proto3" json:"Primary,omitempty"`
	PrimaryAmmoMagazine   int32    `protobuf:"varint,18,opt,name=PrimaryAmmoMagazine,proto3" json:"PrimaryAmmoMagazine,omitempty"`
	PrimaryAmmoReserve    int32    `protobuf:"varint,19,opt,name=PrimaryAmmoReserve,proto3" json:"PrimaryAmmoReserve,omitempty"`
	Secondary             string   `protobuf:"bytes,20,opt,name=Secondary,proto3" json:"Secondary,omitempty"`
	SecondaryAmmoMagazine int32    `protobuf:"varint,21,opt,name=SecondaryAmmoMagazine,proto3" json:"SecondaryAmmoMagazine,omitempty"`
	SecondaryAmmoReserve  int32    `protobuf:"varint,22,opt,name=SecondaryAmmoReserve,proto3" json:"SecondaryAmmoReserve,omitempty"`
	Grenades              []string `protobuf:"bytes,23,rep,name=Grenades,proto3" json:"Grenades,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{1}
}

func (x *Player) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Player) GetTeam() string {
	if x != nil {
		return x.Team
	}
	return ""
}

func (x *Player) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Player) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Player) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *Player) GetRotation() float32 {
	if x != nil {
		return x.Rotation
	}
	return 0
}

func (x *Player) GetAlive() bool {
	if x != nil {
		return x.Alive
	}
	return false
}

func (x *Player) GetWeapon() string {
	if x != nil {
		return x.Weapon
	}
	return ""
}

func (x *Player) GetFlashed() bool {
	if x != nil {
		return x.Flashed
	}
	return false
}

func (x *Player) GetHp() int32 {
	if x != nil {
		return x.Hp
	}
	return 0
}

func (x *Player) GetArmor() int32 {
	if x != nil {
		return x.Armor
	}
	return 0
}

func (x *Player) GetHelmet() bool {
	if x != nil {
		return x.Helmet
	}
	return false
}

func (x *Player) GetDefuse() bool {
	if x != nil {
		return x.Defuse
	}
	return false
}

func (x *Player) GetBomb() bool {
	if x != nil {
		return x.Bomb
	}
	return false
}

func (x *Player) GetMoney() int32 {
	if x != nil {
		return x.Money
	}
	return 0
}

func (x *Player) GetPrimary() string {
	if x != nil {
		return x.Primary
	}
	return ""
}

func (x *Player) GetPrimaryAmmoMagazine() int32 {
	if x != nil {
		return x.PrimaryAmmoMagazine
	}
	return 0
}

func (x *Player) GetPrimaryAmmoReserve() int32 {
	if x != nil {
		return x.PrimaryAmmoReserve
	}
	return 0
}

func (x *Player) GetSecondary() string {
	if x != nil {
		return x.Secondary
	}
	return ""
}

func (x *Player) GetSecondaryAmmoMagazine() int32 {
	if x != nil {
		return x.SecondaryAmmoMagazine
	}
	return 0
}

func (x *Player) GetSecondaryAmmoReserve() int32 {
	if x != nil {
		return x.SecondaryAmmoReserve
	}
	return 0
}

func (x *Player) GetGrenades() []string {
	if x != nil {
		return x.Grenades
	}
	return nil
}

type TeamUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TName   string `protobuf:"bytes,1,opt,name=TName,proto3" json:"TName,omitempty"`
	TScore  int32  `protobuf:"varint,2,opt,name=TScore,proto3" json:"TScore,omitempty"`
	CTName  string `protobuf:"bytes,3,opt,name=CTName,proto3" json:"CTName,omitempty"`
	CTScore int32  `protobuf:"varint,4,opt,name=CTScore,proto3" json:"CTScore,omitempty"`
}

func (x *TeamUpdate) Reset() {
	*x = TeamUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamUpdate) ProtoMessage() {}

func (x *TeamUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamUpdate.ProtoReflect.Descriptor instead.
func (*TeamUpdate) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{2}
}

func (x *TeamUpdate) GetTName() string {
	if x != nil {
		return x.TName
	}
	return ""
}

func (x *TeamUpdate) GetTScore() int32 {
	if x != nil {
		return x.TScore
	}
	return 0
}

func (x *TeamUpdate) GetCTName() string {
	if x != nil {
		return x.CTName
	}
	return ""
}

func (x *TeamUpdate) GetCTScore() int32 {
	if x != nil {
		return x.CTScore
	}
	return 0
}

type TickState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*Player  `protobuf:"bytes,1,rep,name=Players,proto3" json:"Players,omitempty"`
	Nades   []*Grenade `protobuf:"bytes,2,rep,name=Nades,proto3" json:"Nades,omitempty"`
	Bomb    *Bomb      `protobuf:"bytes,3,opt,name=Bomb,proto3" json:"Bomb,omitempty"`
}

func (x *TickState) Reset() {
	*x = TickState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickState) ProtoMessage() {}

func (x *TickState) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickState.ProtoReflect.Descriptor instead.
func (*TickState) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{3}
}

func (x *TickState) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *TickState) GetNades() []*Grenade {
	if x != nil {
		return x.Nades
	}
	return nil
}

func (x *TickState) GetBomb() *Bomb {
	if x != nil {
		return x.Bomb
	}
	return nil
}

type Init struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapName string `protobuf:"bytes,1,opt,name=mapName,proto3" json:"mapName,omitempty"`
	TName   string `protobuf:"bytes,2,opt,name=TName,proto3" json:"TName,omitempty"`
	CTName  string `protobuf:"bytes,3,opt,name=CTName,proto3" json:"CTName,omitempty"`
}

func (x *Init) Reset() {
	*x = Init{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Init) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Init) ProtoMessage() {}

func (x *Init) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Init.ProtoReflect.Descriptor instead.
func (*Init) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{4}
}

func (x *Init) GetMapName() string {
	if x != nil {
		return x.MapName
	}
	return ""
}

func (x *Init) GetTName() string {
	if x != nil {
		return x.TName
	}
	return ""
}

func (x *Init) GetCTName() string {
	if x != nil {
		return x.CTName
	}
	return ""
}

type Frag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VictimName string `protobuf:"bytes,1,opt,name=VictimName,proto3" json:"VictimName,omitempty"`
	VictimTeam string `protobuf:"bytes,2,opt,name=VictimTeam,proto3" json:"VictimTeam,omitempty"`
	KillerName string `protobuf:"bytes,3,opt,name=KillerName,proto3" json:"KillerName,omitempty"`
	KillerTeam string `protobuf:"bytes,4,opt,name=KillerTeam,proto3" json:"KillerTeam,omitempty"`
	Weapon     string `protobuf:"bytes,5,opt,name=Weapon,proto3" json:"Weapon,omitempty"`
}

func (x *Frag) Reset() {
	*x = Frag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frag) ProtoMessage() {}

func (x *Frag) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frag.ProtoReflect.Descriptor instead.
func (*Frag) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{5}
}

func (x *Frag) GetVictimName() string {
	if x != nil {
		return x.VictimName
	}
	return ""
}

func (x *Frag) GetVictimTeam() string {
	if x != nil {
		return x.VictimTeam
	}
	return ""
}

func (x *Frag) GetKillerName() string {
	if x != nil {
		return x.KillerName
	}
	return ""
}

func (x *Frag) GetKillerTeam() string {
	if x != nil {
		return x.KillerTeam
	}
	return ""
}

func (x *Frag) GetWeapon() string {
	if x != nil {
		return x.Weapon
	}
	return ""
}

type Shot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int32   `protobuf:"varint,1,opt,name=PlayerId,proto3" json:"PlayerId,omitempty"`
	X        float64 `protobuf:"fixed64,2,opt,name=X,proto3" json:"X,omitempty"`
	Y        float64 `protobuf:"fixed64,3,opt,name=Y,proto3" json:"Y,omitempty"`
	Rotation float32 `protobuf:"fixed32,4,opt,name=Rotation,proto3" json:"Rotation,omitempty"`
}

func (x *Shot) Reset() {
	*x = Shot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shot) ProtoMessage() {}

func (x *Shot) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shot.ProtoReflect.Descriptor instead.
func (*Shot) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{6}
}

func (x *Shot) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *Shot) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Shot) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Shot) GetRotation() float32 {
	if x != nil {
		return x.Rotation
	}
	return 0
}

type Grenade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Kind   string  `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	X      float64 `protobuf:"fixed64,3,opt,name=x,proto3" json:"x,omitempty"`
	Y      float64 `protobuf:"fixed64,4,opt,name=y,proto3" json:"y,omitempty"`
	Z      float64 `protobuf:"fixed64,5,opt,name=z,proto3" json:"z,omitempty"`
	Action string  `protobuf:"bytes,6,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *Grenade) Reset() {
	*x = Grenade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Grenade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Grenade) ProtoMessage() {}

func (x *Grenade) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Grenade.ProtoReflect.Descriptor instead.
func (*Grenade) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{7}
}

func (x *Grenade) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Grenade) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Grenade) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Grenade) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Grenade) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *Grenade) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type Bomb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X     float64        `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y     float64        `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	Z     float64        `protobuf:"fixed64,3,opt,name=z,proto3" json:"z,omitempty"`
	State Bomb_BombState `protobuf:"varint,4,opt,name=state,proto3,enum=csgo.Bomb_BombState" json:"state,omitempty"`
}

func (x *Bomb) Reset() {
	*x = Bomb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bomb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bomb) ProtoMessage() {}

func (x *Bomb) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bomb.ProtoReflect.Descriptor instead.
func (*Bomb) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{8}
}

func (x *Bomb) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Bomb) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Bomb) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *Bomb) GetState() Bomb_BombState {
	if x != nil {
		return x.State
	}
	return Bomb_Zero
}

type Round struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundNo           int32       `protobuf:"varint,1,opt,name=RoundNo,proto3" json:"RoundNo,omitempty"`
	RoundTookSeconds  int32       `protobuf:"varint,2,opt,name=RoundTookSeconds,proto3" json:"RoundTookSeconds,omitempty"`
	StartTick         int32       `protobuf:"varint,3,opt,name=StartTick,proto3" json:"StartTick,omitempty"`
	FreezetimeEndTick int32       `protobuf:"varint,4,opt,name=FreezetimeEndTick,proto3" json:"FreezetimeEndTick,omitempty"`
	EndTick           int32       `protobuf:"varint,5,opt,name=EndTick,proto3" json:"EndTick,omitempty"`
	Ticks             []*Message  `protobuf:"bytes,6,rep,name=Ticks,proto3" json:"Ticks,omitempty"`
	TeamState         *TeamUpdate `protobuf:"bytes,7,opt,name=TeamState,proto3" json:"TeamState,omitempty"`
	Winner            string      `protobuf:"bytes,8,opt,name=Winner,proto3" json:"Winner,omitempty"`
}

func (x *Round) Reset() {
	*x = Round{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Round) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Round) ProtoMessage() {}

func (x *Round) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Round.ProtoReflect.Descriptor instead.
func (*Round) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{9}
}

func (x *Round) GetRoundNo() int32 {
	if x != nil {
		return x.RoundNo
	}
	return 0
}

func (x *Round) GetRoundTookSeconds() int32 {
	if x != nil {
		return x.RoundTookSeconds
	}
	return 0
}

func (x *Round) GetStartTick() int32 {
	if x != nil {
		return x.StartTick
	}
	return 0
}

func (x *Round) GetFreezetimeEndTick() int32 {
	if x != nil {
		return x.FreezetimeEndTick
	}
	return 0
}

func (x *Round) GetEndTick() int32 {
	if x != nil {
		return x.EndTick
	}
	return 0
}

func (x *Round) GetTicks() []*Message {
	if x != nil {
		return x.Ticks
	}
	return nil
}

func (x *Round) GetTeamState() *TeamUpdate {
	if x != nil {
		return x.TeamState
	}
	return nil
}

func (x *Round) GetWinner() string {
	if x != nil {
		return x.Winner
	}
	return ""
}

type Progress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress int32  `protobuf:"varint,1,opt,name=Progress,proto3" json:"Progress,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *Progress) Reset() {
	*x = Progress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Progress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Progress) ProtoMessage() {}

func (x *Progress) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Progress.ProtoReflect.Descriptor instead.
func (*Progress) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{10}
}

func (x *Progress) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *Progress) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RoundTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundTime  string `protobuf:"bytes,1,opt,name=RoundTime,proto3" json:"RoundTime,omitempty"`
	FreezeTime int32  `protobuf:"varint,2,opt,name=FreezeTime,proto3" json:"FreezeTime,omitempty"`
}

func (x *RoundTime) Reset() {
	*x = RoundTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundTime) ProtoMessage() {}

func (x *RoundTime) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundTime.ProtoReflect.Descriptor instead.
func (*RoundTime) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{11}
}

func (x *RoundTime) GetRoundTime() string {
	if x != nil {
		return x.RoundTime
	}
	return ""
}

func (x *RoundTime) GetFreezeTime() int32 {
	if x != nil {
		return x.FreezeTime
	}
	return 0
}

type Demo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId  string                `protobuf:"bytes,1,opt,name=MatchId,proto3" json:"MatchId,omitempty"`
	Platform Demo_DemoPlatformType `protobuf:"varint,2,opt,name=Platform,proto3,enum=csgo.Demo_DemoPlatformType" json:"Platform,omitempty"`
}

func (x *Demo) Reset() {
	*x = Demo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Demo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Demo) ProtoMessage() {}

func (x *Demo) ProtoReflect() protoreflect.Message {
	mi := &file_Message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Demo.ProtoReflect.Descriptor instead.
func (*Demo) Descriptor() ([]byte, []int) {
	return file_Message_proto_rawDescGZIP(), []int{12}
}

func (x *Demo) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *Demo) GetPlatform() Demo_DemoPlatformType {
	if x != nil {
		return x.Platform
	}
	return Demo_Upload
}

var File_Message_proto protoreflect.FileDescriptor

var file_Message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x04, 0x63, 0x73, 0x67, 0x6f, 0x22, 0xb3, 0x07, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x33, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d,
	0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x12, 0x35, 0x0a, 0x0a, 0x74, 0x65,
	0x61, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x32, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x54, 0x69, 0x63, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x01, 0x52, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x48,
	0x02, 0x52, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x05, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x73, 0x67, 0x6f,
	0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x03, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x48, 0x04, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x09, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x05, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x53, 0x68, 0x6f,
	0x74, 0x48, 0x06, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x04,
	0x66, 0x72, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x73, 0x67,
	0x6f, 0x2e, 0x46, 0x72, 0x61, 0x67, 0x48, 0x07, 0x52, 0x04, 0x66, 0x72, 0x61, 0x67, 0x88, 0x01,
	0x01, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x65, 0x6d, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x44, 0x65, 0x6d, 0x6f, 0x48, 0x08, 0x52, 0x04, 0x64,
	0x65, 0x6d, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x0c, 0x67, 0x72, 0x65, 0x6e, 0x61, 0x64,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x73, 0x67, 0x6f, 0x2e, 0x47, 0x72, 0x65, 0x6e, 0x61, 0x64, 0x65, 0x48, 0x09, 0x52, 0x0c, 0x67,
	0x72, 0x65, 0x6e, 0x61, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0a, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x22, 0xf8, 0x01,
	0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x5a, 0x65, 0x72, 0x6f, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x69, 0x63, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d,
	0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x10, 0x02, 0x12,
	0x0c, 0x0a, 0x08, 0x49, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x10, 0x04, 0x12, 0x0f, 0x0a,
	0x0b, 0x44, 0x65, 0x6d, 0x6f, 0x45, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x10, 0x05, 0x12, 0x0d,
	0x0a, 0x09, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x10, 0x06, 0x12, 0x10, 0x0a,
	0x0c, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x10, 0x07, 0x12,
	0x12, 0x0a, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x10,
	0x09, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x10, 0x0a,
	0x12, 0x0c, 0x0a, 0x08, 0x46, 0x72, 0x61, 0x67, 0x54, 0x79, 0x70, 0x65, 0x10, 0x0b, 0x12, 0x13,
	0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x10, 0x0c, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x10, 0x0d, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x72, 0x65, 0x6e, 0x61, 0x64, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x10, 0x0e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x65, 0x61,
	0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x69, 0x63, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x66, 0x72, 0x61, 0x67, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x67, 0x72, 0x65, 0x6e, 0x61, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xfa, 0x04, 0x0a, 0x06,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0c, 0x0a, 0x01, 0x58, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x58, 0x12, 0x0c, 0x0a, 0x01, 0x59, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x01, 0x59, 0x12, 0x0c, 0x0a, 0x01, 0x5a, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x01, 0x5a, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x48, 0x70, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x48, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x72, 0x6d, 0x6f,
	0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x48, 0x65, 0x6c, 0x6d, 0x65, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x48, 0x65, 0x6c, 0x6d, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x65, 0x66, 0x75, 0x73, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x44, 0x65, 0x66, 0x75, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x42, 0x6f, 0x6d, 0x62, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x42, 0x6f,
	0x6d, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x30, 0x0a, 0x13, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x6d, 0x6d,
	0x6f, 0x4d, 0x61, 0x67, 0x61, 0x7a, 0x69, 0x6e, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x6d, 0x6d, 0x6f, 0x4d, 0x61, 0x67, 0x61,
	0x7a, 0x69, 0x6e, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41,
	0x6d, 0x6d, 0x6f, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x6d, 0x6d, 0x6f, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72,
	0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61,
	0x72, 0x79, 0x12, 0x34, 0x0a, 0x15, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x41,
	0x6d, 0x6d, 0x6f, 0x4d, 0x61, 0x67, 0x61, 0x7a, 0x69, 0x6e, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x15, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x41, 0x6d, 0x6d, 0x6f,
	0x4d, 0x61, 0x67, 0x61, 0x7a, 0x69, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x61, 0x72, 0x79, 0x41, 0x6d, 0x6d, 0x6f, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72,
	0x79, 0x41, 0x6d, 0x6d, 0x6f, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x47, 0x72, 0x65, 0x6e, 0x61, 0x64, 0x65, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x47, 0x72, 0x65, 0x6e, 0x61, 0x64, 0x65, 0x73, 0x22, 0x6c, 0x0a, 0x0a, 0x54, 0x65, 0x61, 0x6d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x54, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x54, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x54, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x54, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x54, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x43,
	0x54, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x78, 0x0a, 0x09, 0x54, 0x69, 0x63, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x4e,
	0x61, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x73, 0x67,
	0x6f, 0x2e, 0x47, 0x72, 0x65, 0x6e, 0x61, 0x64, 0x65, 0x52, 0x05, 0x4e, 0x61, 0x64, 0x65, 0x73,
	0x12, 0x1e, 0x0a, 0x04, 0x42, 0x6f, 0x6d, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x42, 0x6f, 0x6d, 0x62, 0x52, 0x04, 0x42, 0x6f, 0x6d, 0x62,
	0x22, 0x4e, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x54, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x54, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x54, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x9e, 0x01, 0x0a, 0x04, 0x46, 0x72, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x56, 0x69, 0x63,
	0x74, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x56,
	0x69, 0x63, 0x74, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x56, 0x69, 0x63,
	0x74, 0x69, 0x6d, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x56,
	0x69, 0x63, 0x74, 0x69, 0x6d, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x4b, 0x69, 0x6c,
	0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4b,
	0x69, 0x6c, 0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4b, 0x69, 0x6c,
	0x6c, 0x65, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4b,
	0x69, 0x6c, 0x6c, 0x65, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x65, 0x61,
	0x70, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x57, 0x65, 0x61, 0x70, 0x6f,
	0x6e, 0x22, 0x5a, 0x0a, 0x04, 0x53, 0x68, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x58, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x01, 0x58, 0x12, 0x0c, 0x0a, 0x01, 0x59, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01,
	0x59, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6f, 0x0a,
	0x07, 0x47, 0x72, 0x65, 0x6e, 0x61, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x0c, 0x0a, 0x01,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x01, 0x7a, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb6,
	0x01, 0x0a, 0x04, 0x42, 0x6f, 0x6d, 0x62, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01,
	0x7a, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x42, 0x6f, 0x6d, 0x62, 0x2e, 0x42, 0x6f, 0x6d,
	0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x58, 0x0a,
	0x09, 0x42, 0x6f, 0x6d, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x5a, 0x65,
	0x72, 0x6f, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x65, 0x66, 0x75, 0x73, 0x69, 0x6e, 0x67,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x75, 0x73, 0x65, 0x64, 0x10, 0x02, 0x12,
	0x0b, 0x0a, 0x07, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x64, 0x65, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08,
	0x50, 0x6c, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x6c,
	0x61, 0x6e, 0x74, 0x65, 0x64, 0x10, 0x05, 0x22, 0xa0, 0x02, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x54, 0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x6f, 0x6f, 0x6b,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x11, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x23, 0x0a,
	0x05, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x73, 0x67, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x54, 0x69, 0x63,
	0x6b, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x54, 0x65, 0x61,
	0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x09, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x40, 0x0a, 0x08, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x49, 0x0a, 0x09,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x72, 0x65, 0x65, 0x7a,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x46, 0x72, 0x65,
	0x65, 0x7a, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x04, 0x44, 0x65, 0x6d, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63,
	0x73, 0x67, 0x6f, 0x2e, 0x44, 0x65, 0x6d, 0x6f, 0x2e, 0x44, 0x65, 0x6d, 0x6f, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x22, 0x35, 0x0a, 0x10, 0x44, 0x65, 0x6d, 0x6f, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x61, 0x63, 0x65, 0x69, 0x74, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x10, 0x02, 0x42, 0x0a, 0x5a, 0x08, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Message_proto_rawDescOnce sync.Once
	file_Message_proto_rawDescData = file_Message_proto_rawDesc
)

func file_Message_proto_rawDescGZIP() []byte {
	file_Message_proto_rawDescOnce.Do(func() {
		file_Message_proto_rawDescData = protoimpl.X.CompressGZIP(file_Message_proto_rawDescData)
	})
	return file_Message_proto_rawDescData
}

var file_Message_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_Message_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_Message_proto_goTypes = []interface{}{
	(Message_MessageType)(0),   // 0: csgo.Message.MessageType
	(Bomb_BombState)(0),        // 1: csgo.Bomb.BombState
	(Demo_DemoPlatformType)(0), // 2: csgo.Demo.DemoPlatformType
	(*Message)(nil),            // 3: csgo.Message
	(*Player)(nil),             // 4: csgo.Player
	(*TeamUpdate)(nil),         // 5: csgo.TeamUpdate
	(*TickState)(nil),          // 6: csgo.TickState
	(*Init)(nil),               // 7: csgo.Init
	(*Frag)(nil),               // 8: csgo.Frag
	(*Shot)(nil),               // 9: csgo.Shot
	(*Grenade)(nil),            // 10: csgo.Grenade
	(*Bomb)(nil),               // 11: csgo.Bomb
	(*Round)(nil),              // 12: csgo.Round
	(*Progress)(nil),           // 13: csgo.Progress
	(*RoundTime)(nil),          // 14: csgo.RoundTime
	(*Demo)(nil),               // 15: csgo.Demo
}
var file_Message_proto_depIdxs = []int32{
	0,  // 0: csgo.Message.msgType:type_name -> csgo.Message.MessageType
	5,  // 1: csgo.Message.teamUpdate:type_name -> csgo.TeamUpdate
	6,  // 2: csgo.Message.tickState:type_name -> csgo.TickState
	7,  // 3: csgo.Message.init:type_name -> csgo.Init
	12, // 4: csgo.Message.round:type_name -> csgo.Round
	13, // 5: csgo.Message.progress:type_name -> csgo.Progress
	14, // 6: csgo.Message.roundTime:type_name -> csgo.RoundTime
	9,  // 7: csgo.Message.shot:type_name -> csgo.Shot
	8,  // 8: csgo.Message.frag:type_name -> csgo.Frag
	15, // 9: csgo.Message.demo:type_name -> csgo.Demo
	10, // 10: csgo.Message.grenadeEvent:type_name -> csgo.Grenade
	4,  // 11: csgo.TickState.Players:type_name -> csgo.Player
	10, // 12: csgo.TickState.Nades:type_name -> csgo.Grenade
	11, // 13: csgo.TickState.Bomb:type_name -> csgo.Bomb
	1,  // 14: csgo.Bomb.state:type_name -> csgo.Bomb.BombState
	3,  // 15: csgo.Round.Ticks:type_name -> csgo.Message
	5,  // 16: csgo.Round.TeamState:type_name -> csgo.TeamUpdate
	2,  // 17: csgo.Demo.Platform:type_name -> csgo.Demo.DemoPlatformType
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_Message_proto_init() }
func file_Message_proto_init() {
	if File_Message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Init); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Grenade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bomb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Round); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Progress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Demo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_Message_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Message_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Message_proto_goTypes,
		DependencyIndexes: file_Message_proto_depIdxs,
		EnumInfos:         file_Message_proto_enumTypes,
		MessageInfos:      file_Message_proto_msgTypes,
	}.Build()
	File_Message_proto = out.File
	file_Message_proto_rawDesc = nil
	file_Message_proto_goTypes = nil
	file_Message_proto_depIdxs = nil
}
